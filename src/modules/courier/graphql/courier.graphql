type Courier {
  id: Int!
  user: User!
  from: String!
  to: String!
  date: Date!
  fee: Int
  flight: String
  maximumWeight: Int
  comment: String
}

input CourierInput {
  from: String!
  to: String!
  date: Date!
  flight: String
  fee: Int
  comment: String
  maximumWeight: Int
}

input CouriersFilter {
  from: String!
  to: String!
  date: Date!
}

type CouriersResponse {
  list: [Courier!]!
  total: Int!
}

type Query {
  # courier(id: Int!): Courier
  couriers(filter: CouriersFilter): CouriersResponse!
}

type Mutation {
  createCourier(input: CourierInput!): Courier!
  cancelCourier(id: Int!): Boolean!
}
