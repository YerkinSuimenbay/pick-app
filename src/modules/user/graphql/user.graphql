type User {
  id: Int!
  name: String!
  phone: String!
  email: String!
  idType: String!
  idNumber: String!
  idImages: [File!]
  description: String
  isAdmin: Boolean!
  isActive: Boolean!
  ratingAsCourier: Float!
  favorites: [User!]
  createdAt: Date!
  updatedAt: Date!
}

input UsersFilter {
  search: String
  # status: UserStatus
}

type UsersResponse {
  list: [User!]!
  total: Int!
}

input UpdateAccountInput {
  name: String!
  phone: String!
  email: String!
  description: String!
}

type Query {
  # users(filter: UsersFilter, pagination: PaginationInput): UsersResponse!
  # userByAdmin(id: Int!): User!
  me: User!
}

type Mutation {
  upsertIdImages(idImageIds: [Int!]!): User!
  updateAccount(input: UpdateAccountInput!): User!
}
