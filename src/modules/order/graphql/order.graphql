enum OfferStatus {
  pending
  canceled
  accepted
  declined
}

type Offer {
  id: Int!
  package: Package
  courier: Courier
  offeredByCourier: Boolean!
  status: OfferStatus!
  createdAt: Date!
  updatedAt: Date!
}

type Order {
  id: Int!
  package: Package
  courier: Courier
  pickUpDate: Date!
  intransitDate: Date
  deliveredDate: Date
  canceledDate: Date
  rating: Int
  comment: String
  createdAt: Date!
  updatedAt: Date!
}

type SeeOffersForPackageResponse {
  list: [Offer!]!
  total: Int!
}

type SeeOffersForCourierResponse {
  list: [Offer!]!
  total: Int!
}

type Mutation {
  # BY DELIVER GUY
  bookThePackage(packageId: Int!, courierId: Int!): Offer!
  cancelBookThePackage(offerId: Int!): Boolean!
  acceptPackage(offerId: Int!): Order!
  declinePackage(offerId: Int!): Boolean!
  intransitOrder(orderId: Int!): Boolean!
  deliverOrder(orderId: Int!): Boolean!
  revertOrderToPickUp(orderId: Int!): Boolean!

  # BY SENDER GUY
  takeMyPackage(packageId: Int!, courierId: Int!): Offer!
  cancelTakeMyPackage(offerId: Int!): Boolean!
  acceptCourier(offerId: Int!): Order!
  declineCourier(offerId: Int!): Boolean!
  cancelOrder(orderId: Int!): Boolean!
  #
  # changeToNextStatus(sendId: Int!): Boolean! # done by send
}
